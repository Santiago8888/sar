console.log('Hola')
var CHART_PADDING = 20;
var wid;
var hei;

function init(){
var can = document.getElementById("bar");
wid = can.width;
hei = can.height;
var context = can.getContext("2d");
context.fillStyle = "#eeeeee";
context.strokeStyle = "#999999";
context.fillRect(0,0,wid,hei);
context.font = "10pt Verdana, sans-serif";
context.fillStyle = "#999999";
context.moveTo(CHART_PADDING,CHART_PADDING);
context.rect(CHART_PADDING,CHART_PADDING,wid-CHART_PADDING*2,hei-CHART_PADDING*2);
context.stroke();
context.strokeStyle = "#cccccc";
fillChart(context,chartInfo);
for(i=0; i<data.length; i++){
addLine2(context,formatData(data[i], "/2011",colors[i]),colors[i]);
}
//addLine(context,formatData(a2010, "/2010","#fecb00"),"#fecb00");	
addLine(context,formatData(a2011, "/2011","#800000"),"#800000");
}

function addLine(context,data,style){
var yDataLabel = chartInfo.y.label;
var xDataLabel = chartInfo.x.label;
var yDataRange = chartInfo.y.max-chartInfo.y.min;
var xDataRange = chartInfo.x.max-chartInfo.x.min;
var chartHeight = hei- CHART_PADDING*2;
var chartWidth = wid- CHART_PADDING*2;
var yPos;
var xPos;
context.strokeStyle = style;
context.beginPath();
context.lineWidth = 4.5;
for(var i=0; i<data.length;i++){
xPos = CHART_PADDING + (data[i][xDataLabel]-chartInfo.x.min)/xDataRange * chartWidth;
yPos = (hei - CHART_PADDING) -(data[i][yDataLabel]-chartInfo.y.min)/yDataRange * chartHeight;
context.fillStyle = data[i].style;
context.fillRect(xPos-4 ,yPos-4,8,8);
i ? context.lineTo(xPos,yPos):context.moveTo(xPos,yPos);
}
context.stroke();
}

function addLine2(context,data,style){
var yDataLabel = chartInfo.y.label;
var xDataLabel = chartInfo.x.label;
var yDataRange = chartInfo.y.max-chartInfo.y.min;
var xDataRange = chartInfo.x.max-chartInfo.x.min;
var chartHeight = hei- CHART_PADDING*2;
var chartWidth = wid- CHART_PADDING*2;
var yPos;
var xPos;
context.strokeStyle = style;
context.beginPath();
context.lineWidth = angst;
for(var i=0; i<data.length;i++){
xPos = CHART_PADDING + (data[i][xDataLabel]-chartInfo.x.min)/xDataRange * chartWidth;
yPos = (hei - CHART_PADDING) -(data[i][yDataLabel]-chartInfo.y.min)/yDataRange * chartHeight;
//context.fillStyle = data[i].style;
//context.fillRect(xPos-4 ,yPos-4,8,8);
i ? context.lineTo(xPos,yPos):context.moveTo(xPos,yPos);
}
context.stroke();
}


function formatData(data , labelCopy , style){
newData = [];
for(var i=0; i<data.length;i++){
newData.push({	 label:(i+1)+labelCopy,
users:data[i],
months:i+1,
style:style
});	
}
return newData;	
}

function fillChart(context, chartInfo){
var yData = chartInfo.y;
var steps = yData.steps;
var startY = CHART_PADDING;
var endY = hei-CHART_PADDING;
var chartHeight = endY-startY;
var currentY;
var rangeLength = yData.max-yData.min;
var stepSize = rangeLength/steps;
context.textAlign = "left";
for(var i=0; i<steps; i++){
currentY = startY + (i/steps) *	
chartHeight;
context.moveTo(wid-CHART_PADDING, currentY );
context.lineTo(CHART_PADDING,currentY);
context.fillText((yData.min+stepSize*(steps-i)).toFixed(0), 0, currentY+4);
}
currentY = startY + chartHeight;
context.moveTo(CHART_PADDING, currentY );
context.lineTo(CHART_PADDING/2,currentY);
context.fillText(yData.min, 0, currentY-3);

var xData = chartInfo.x;
steps = xData.steps;
var startX = CHART_PADDING;
var endX = wid-CHART_PADDING;
var chartWidth = endX-startX;
var currentX;
rangeLength = xData.max-xData.min;
stepSize = rangeLength/steps;
context.textAlign = "left";
for(var i=0; i<steps; i++){
currentX = startX + (i/steps) *	chartWidth;
context.moveTo(currentX, startY );
context.lineTo(currentX,endY);
context.fillText(xData.min+stepSize*(i), currentX-6,endY+CHART_PADDING/2);
}
currentX = startX + chartWidth;
context.moveTo(currentX, startY );
context.lineTo(currentX,endY);
//context.fillText(xData.max, currentX-3, endY+CHART_PADDING/2);
context.stroke();
};
